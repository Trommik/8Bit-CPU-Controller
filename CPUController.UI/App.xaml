<Application x:Class="CPUController.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:ui="clr-namespace:CPUController.UI"
             xmlns:valueConverter="clr-namespace:CPUController.UI.ValueConverter"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!-- Theme setting -->
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Green.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- The ViewModelLocator for MVVM -->
            <ui:ViewModelLocator x:Key="ViewModelLocator" />

            <!-- Value Converters -->
            <valueConverter:HexStringConverter x:Key="HexConverter" />

            <!-- Custom Button Style  -->
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
                <Setter Property="FontSize" Value="11" />
                <Setter Property="BorderThickness" Value="0" />
                
                <Setter Property="mah:ControlsHelper.CornerRadius" Value="0" />
                <Setter Property="mah:ControlsHelper.FocusBorderThickness" Value="0" />
                <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
            </Style>

            <!-- Custom Lamp ToggleButton Style  -->
            <Style x:Key="LampToggleButtonStyle" TargetType="{x:Type ToggleButton}">

                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="30" />
                
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
                <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Padding" Value="5 6" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <mah:ClipBorder x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <mah:ClipBorder x:Name="DisabledVisualElement"
                                                Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                                IsHitTestVisible="False"
                                                Opacity="0"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <mah:ContentControlEx x:Name="PART_ContentPresenter"
                                                      Margin="{TemplateBinding BorderThickness}"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
                                </Trigger>
                                <!-- <Trigger Property="IsEnabled" Value="False"> -->
                                <!--     <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" /> -->
                                <!--     <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" /> -->
                                <!-- </Trigger> -->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                <Setter Property="mah:ControlsHelper.CornerRadius" Value="0" />
                <Setter Property="mah:ControlsHelper.FocusBorderBrush"
                        Value="{DynamicResource MahApps.Brushes.Button.Border.Focus}" />
                <Setter Property="mah:ControlsHelper.MouseOverBorderBrush"
                        Value="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}" />
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True" />
                            <Condition Property="IsChecked" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True" />
                            <Condition Property="IsChecked" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                    </MultiTrigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource LampToggleButtonStyle}" />

            <!-- Custom GroupBox Style -->
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MahApps.Styles.GroupBox}">
                <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
                <Setter Property="mah:HeaderedControlHelper.HeaderFontWeight" Value="Bold" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>